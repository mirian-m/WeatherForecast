//
//  CountryInteractor.swift
//  MirianMaglakelidze#28
//
//  Created by Admin on 8/30/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CountryBusinessLogic {
    func getCountries(request: Country.GetCountry.Request)
    func tappedCountryData(request: Country.ShowDetails.Request)
}

protocol CountryDataStore {
    var countryCoordinate: (lat: String, lon: String) { get set }
}

final class CountryInteractor: CountryBusinessLogic, CountryDataStore {
    var presenter: CountryPresentationLogic?
    var worker: APIManeger?
    var countryCoordinate = (lat: "String", lon: "String")
    private var countries = [CountryModel]()
    
    // MARK: Fetch countries
    
    func getCountries(request: Country.GetCountry.Request) {
        worker = APIManeger()
        worker?.fetchData(by: CountryConstants.url, complition: { [weak self] (result: Result<[CountryModel], Error>) in
            DispatchQueue.main.async { [weak self] in
                switch result {
                case .success(let countries) :
                    self?.countries = countries
                case .failure(let error) :
                    print(error)
                }
                self?.presenter?.presentCountries(response: Country.GetCountry.Response(countries: self!.countries))
            }
        })
    }
    
    func tappedCountryData(request: Country.ShowDetails.Request) {
        self.countryCoordinate.lat = "\(request.country.latlng![0])"
        self.countryCoordinate.lon = "\(request.country.latlng![1])"
    }
}
