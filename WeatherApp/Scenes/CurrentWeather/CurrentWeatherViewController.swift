//
//  CurrentWeatherViewController.swift
//  MirianMaglakelidze#28
//
//  Created by Admin on 8/31/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CurrentWeatherDisplayLogic: class {
    func displayCurrentWeather(viewModel: CurrentWeather.GetWeather.ViewModel)
}

final class CurrentWeatherViewController: UIViewController, CurrentWeatherDisplayLogic {
    
    // MARK:- @IBOutlet
    @IBOutlet weak var indicator: UIActivityIndicatorView!
    @IBOutlet weak var countryName: UILabel!
    @IBOutlet weak var weatherImage: UIImageView!
    @IBOutlet weak var tempLb: UILabel!
    var interactor: CurrentWeatherBusinessLogic?
    var router: (NSObjectProtocol & CurrentWeatherRoutingLogic & CurrentWeatherDataPassing)?
    
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = CurrentWeatherInteractor()
        let presenter = CurrentWeatherPresenter()
        let router = CurrentWeatherRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        getWeather()
    }
    
    @IBAction func seeMoreWeatherForecast(_ sender: Any) {
        router?.routeToWeatherForecast()
    }
    
    // MARK: Do something
    
    private func getWeather() {
        indicator.startAnimating()
        let request = CurrentWeather.GetWeather.Request()
        interactor?.getWeather(request: request)
    }
    
    func displayCurrentWeather(viewModel: CurrentWeather.GetWeather.ViewModel) {
        self.indicator.stopAnimating()
        self.countryName.text = viewModel.weather.countryName?.uppercased()
        self.weatherImage.image = viewModel.weather.weatherImage
        self.tempLb.text = "Tep: " + (viewModel.weather.temperature ?? "")
    }
}
