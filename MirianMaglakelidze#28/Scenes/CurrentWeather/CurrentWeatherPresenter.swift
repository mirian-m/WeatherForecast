//
//  CurrentWeatherPresenter.swift
//  MirianMaglakelidze#28
//
//  Created by Admin on 8/31/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CurrentWeatherPresentationLogic {
    func presentCurrenWeather(response: CurrentWeather.GetWeather.Response)
}

class CurrentWeatherPresenter: CurrentWeatherPresentationLogic {
    weak var viewController: CurrentWeatherDisplayLogic?
    
    // MARK: Do something
    func presentCurrenWeather(response: CurrentWeather.GetWeather.Response) {
        let viewModel = CurrentWeather.GetWeather.ViewModel(weather: createWeatherViewModel(by: response.weather!))
        viewController?.displaySomething(viewModel: viewModel)
    }
    
    func createWeatherViewModel(by model: Weather) -> WeatherViewModel {
        let weatherViewModel = WeatherViewModel()
        var celciusValue = model.main.temp - 273.15
        celciusValue.roundingNumber(at: 2)
        guard let iconUrl = model.weather?.first?.icon else { return weatherViewModel}
        let urlString = "\(WeatherAPI.IconAPI.iconBaseUrl.rawValue)\(iconUrl).png"
        weatherViewModel.weatherImage = getImage(urlString: urlString)
        weatherViewModel.temperature = "\(celciusValue)"
        weatherViewModel.countryName = model.name
        return weatherViewModel
    }
    
    func getImage(urlString: String) -> UIImage? {
        guard let url = URL(string: urlString) else { return nil}
        do {
            let data = try Data(contentsOf: url)
            guard let image = UIImage(data: data) else { return nil}
            return image
        } catch {
            print(error)
        }
        return UIImage()
    }
}
