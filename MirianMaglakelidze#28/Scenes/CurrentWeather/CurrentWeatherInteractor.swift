//
//  CurrentWeatherInteractor.swift
//  MirianMaglakelidze#28
//
//  Created by Admin on 8/31/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CurrentWeatherBusinessLogic {
    func getWeather(request: CurrentWeather.GetWeather.Request)
}

protocol CurrentWeatherDataStore {
    var countryCoordinate: (lat: String, lon: String)? { get set }
}

class CurrentWeatherInteractor: CurrentWeatherBusinessLogic, CurrentWeatherDataStore {
    var countryCoordinate: (lat: String, lon: String)?
    var presenter: CurrentWeatherPresentationLogic?
    var worker: APIManeger?
    
    // MARK: Do something
    
    func getWeather(request: CurrentWeather.GetWeather.Request) {
        worker = APIManeger()
        guard let urlRequest = worker?.createWeatherUrl(
                with: WeatherAPI.currentWeatherBaseUrl,
                lat: countryCoordinate!.lat,
                lon: countryCoordinate!.lon,
                key: WeatherAPI.APIKey)
        else { return }
        
        worker?.fetch(by: urlRequest, complition: { [weak self] (result: Result<Weather, Error>) in
            var response = CurrentWeather.GetWeather.Response()
            switch result {
            case .success(let weather):
                response.weather = weather
            case .failure(let error):
                print(error)
            }
            self?.presenter?.presentCurrenWeather(response: response)
        })
    }
    
}

